@model EmployeesVacations.Models.VacationRequestModel

@{
    ViewBag.Title = "EditVacationRequest";
}

<h2>Edit Vacation Request</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.IDVacationRequest, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.IDVacationRequest, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.IDEmployee, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.IDEmployee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.DaysRequested, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.DaysRequested, "", new { @class = "text-danger" })
        </div>
    </div>

    @{ if (User.IsInRole("Lead"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.FirstApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(x => x.FirstApproval, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstApproval, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(x => x.SecondApproval, htmlAttributes: new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.SecondApproval, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    }

    @{ if (User.IsInRole("Manager"))
        {
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(x => x.FirstApproval, new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.FirstApproval, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SecondApproval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(x => x.SecondApproval, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SecondApproval, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    }

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(x => x.Status, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
 }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
